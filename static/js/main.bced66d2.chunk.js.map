{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","_Debug_crash","push","_Utils_Tuple2","key","$","$elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","$elm$core$Basics$LT","$elm$core$Basics$GT","$elm$core$Basics$EQ","_Utils_Tuple0","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_List_Nil","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_List_map2","xs","ys","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","identifier","Error","_Basics_modBy","modulus","answer","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_String_split","sep","str","split","_String_join","strs","join","_String_all","isGood","string","char","word","charCodeAt","_String_contains","sub","indexOf","_String_fromNumber","number","_Json_decodePrim","decoder","value","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_decodeFloat","_Json_decodeString","_Json_wrap","String","_Json_decodeField","field","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_runOnString","_Json_runHelp","JSON","parse","$elm$core$Result$Err","$elm$json$Json$Decode$Failure","message","_Json_run","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","$elm$core$Result$isOk","$elm$json$Json$Decode$Field","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","h","errors","temp","$elm$json$Json$Decode$OneOf","toElmValue","len","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_encode","indentLevel","stringify","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_effectsQueue","_Platform_effectsActive","_Platform_enqueueEffects","managers","cmdBag","subBag","p","q","r","fx","_Platform_dispatchEffects","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","t","s","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_divertHrefToApp","_Platform_outgoingPortMap","tagger","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","A","stopPropagation","ae","currentEventNode","ab","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","initPair","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","bh","bI","bD","initialModel","view","bK","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","_Time_setInterval","interval","id","setInterval","clearInterval","_Http_toTask","toTask","request","done","response","ba","xhr","XMLHttpRequest","$elm$http$Http$NetworkError_","$elm$http$Http$Timeout_","toBody","status","$elm$http$Http$GoodStatus_","$elm$http$Http$BadStatus_","bJ","responseURL","bB","bC","statusText","rawHeaders","$elm$core$Dict$empty","headers","headerPairs","headerPair","substring","$elm$core$Dict$update","oldValue","$elm$core$Maybe$Just","$elm$core$Maybe$isJust","_Http_parseHeaders","getAllResponseHeaders","_Http_toMetadata","_Http_toResponse","aV","tracker","upload","$elm$core$Platform$sendToSelf","$elm$http$Http$Sending","bA","loaded","aP","total","$elm$http$Http$Receiving","bx","lengthComputable","$elm$core$Maybe$Nothing","_Http_track","open","bi","$elm$http$Http$BadUrl_","setRequestHeader","timeout","bG","responseType","withCredentials","a0","_Http_configureRequest","a2","send","abort","_Http_expect","toValue","_Http_mapExpect","expect","$elm$core$List$cons","$elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","$elm$core$String$all","$elm$json$Json$Encode$encode","$elm$core$String$fromInt","$elm$core$String$join","chunks","_List_toArray","$elm$core$String$split","$elm$json$Json$Decode$indent","$elm$core$List$foldl","$elm$core$List$length","_v0","$elm$core$List$map2","$elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","$elm$core$List$range","$elm$core$List$indexedMap","$elm$core$Char$toCode","code","$elm$core$Char$isLower","_char","$elm$core$Char$isUpper","$elm$core$Char$isAlpha","$elm$core$Char$isAlphaNum","$elm$core$Char$isDigit","$elm$json$Json$Decode$errorOneOf","error","$elm$json$Json$Decode$errorToString","$elm$json$Json$Decode$errorToStringHelp","context","errorToStringHelp","err","isSimple","_v1","isNaN","slice","_v2","rest","indexName","introduction","json","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Array$Leaf","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","$elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","$elm$json$Json$Decode$map","$elm$core$Basics$identity","$elm$core$String$contains","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Task$sequence","tasks","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","commands","millisToPosix","$elm$browser$Browser$element","$elm$json$Json$Decode$float","$author$project$Main$RandomizeNumbers","$elm$random$Random$Seed","$elm$random$Random$next","incr","$elm$time$Time$now","Date","now","$elm$random$Random$init","time","$elm$random$Random$initialSeed","$elm$random$Random$step","seed","$elm$random$Random$onEffects","newSeed","$elm$random$Random$onSelfMsg","$elm$random$Random$map","genA","seed0","seed1","$elm$random$Random$command","$elm$random$Random$generate","generator","$author$project$Main$Failure","$author$project$Main$initialModel","L","U","$elm$core$Array$fromListHelp","jsArray","remainingItems","$elm$random$Random$peel","$elm$random$Random$int","range","threshhold","seedN","accountForBias","$elm$core$Array$length","$elm$random$Random$listHelp","revList","gen","$elm$random$Random$list","$elm$core$Basics$compare","$elm$core$Dict$get","targetKey","right","$owanturist$elm_union_find$UnionFind$findFast","cursor","$owanturist$elm_union_find$UnionFind$find","$elm$core$Array$bitMask","$elm$core$Elm$JsArray$unsafeGet","$elm$core$Array$getHelp","$elm$core$Array$get","startShift","$elm$core$Array$tailIndex","$elm$core$Basics$modBy","$owanturist$elm_union_find$UnionFind$QuickUnionPathCompression","$elm$core$Dict$RBEmpty_elm_builtin","$owanturist$elm_union_find$UnionFind$quickUnionPathCompression","$elm$core$Dict$RBNode_elm_builtin","$elm$core$Dict$balance","color","_v6","lRight","rK","rV","rLeft","rRight","$elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","$elm$core$Dict$insert","$owanturist$elm_union_find$UnionFind$findCompressed","$owanturist$elm_union_find$UnionFind$union","count_","leftRoot","rightRoot","rightDict","$elm_community$random_extra$Utils$selectUniqByIndexes","values","randomIndexes","modByLength","randomIndex","uf","leaderOfElement","leaderOfNextElement","$elm_community$random_extra$Random$List$shuffle","$elm$core$Array$fromList","$author$project$Main$Tick","$elm$time$Time$Every","$elm$time$Time$State","processes","aF","aU","$elm$time$Time$init","$elm$time$Time$addMySub","$elm$core$Process$kill","$elm$core$Dict$foldl","$elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","initialResult","_v3","rKey","rValue","stepState","lKey","lValue","leftovers","intermediateResult","_v4","$elm$time$Time$setInterval","$elm$core$Process$spawn","$elm$time$Time$spawnHelp","intervals","spawnTimer","$elm$time$Time$onEffects","subs","_v7","kills","newTaggers","existing","spawnList","existingDict","newProcesses","$elm$time$Time$onSelfMsg","$elm$core$Basics$composeL","converter","$elm$time$Time$subscription","$elm$time$Time$every","$elm$core$Platform$Sub$none","$elm$core$Platform$Cmd$batch","$author$project$Main$cacheScore","_Platform_checkPortName","clearTimeout","cmdList","currentSubs","subscribe","unsubscribe","splice","$author$project$Main$GotGif","$elm$json$Json$Decode$decodeString","maybe","$elm$core$Dict$moveRedLeft","_v5","rlL","rlR","$elm$core$Dict$moveRedRight","$elm$core$Dict$removeHelpPrepEQGT","F7","_v2$2","$elm$core$Dict$removeMin","lLeft","$elm$core$Dict$removeHelp","$elm$core$Dict$removeHelpEQGT","$elm$core$Dict$getMin","$elm$core$Dict$remove","alter","dictionary","$elm$core$Basics$composeR","$elm$http$Http$expectStringResponse","toMsg","toResult","$elm$core$Result$mapError","$elm$http$Http$BadBody","$elm$http$Http$NetworkError","$elm$http$Http$Timeout","$elm$http$Http$resolve","$elm$http$Http$expectJson","$elm$http$Http$emptyBody","$elm$http$Http$Request","$elm$http$Http$State","reqs","aJ","aT","$elm$http$Http$init","$elm$http$Http$updateReqs","cmds","updateReqs","cmd","otherCmds","req","pid","$elm$http$Http$onEffects","$elm$core$List$maybeCons","mx","$elm$core$List$filterMap","$elm$http$Http$maybeSend","desiredTracker","progress","$elm$http$Http$onSelfMsg","$elm$http$Http$cmdMap","$elm$http$Http$MySub","exports","$elm$http$Http$command","$elm$http$Http$get","$elm$http$Http$request","$author$project$Main$gifDecoder","$author$project$Main$getRandomGif","gifType","$elm$core$Platform$Cmd$none","$author$project$Main$update","pressedNumber","theNextCorrectNumber","theNewGameState","$author$project$Main$endingNumber","$elm$json$Json$Encode$string","$elm$html$Html$Attributes$stringProperty","$elm$html$Html$Attributes$class","$elm$html$Html$div","$elm$html$Html$br","$elm$html$Html$img","$elm$html$Html$text","$elm$html$Html$h1","$elm$html$Html$p","$author$project$Main$instructions","$elm$core$String$fromFloat","$elm$html$Html$small","$author$project$Main$ResetGame","$elm$html$Html$button","$elm$virtual_dom$VirtualDom$on","$elm$html$Html$Events$on","$elm$html$Html$Events$onClick","$elm$json$Json$Decode$succeed","$author$project$Main$showButton","buttonNumber","obfuscateButtonNumber","highlightCurrentButton","$author$project$Main$showButtonRow","$elm$core$List$drop","drop","$elm$core$List$takeReverse","kept","takeReverse","$elm$core$List$takeTailRec","$elm$core$List$takeFast","_v0$1","_v0$5","_v8","_v9","_v10","$elm$core$List$take","$author$project$Main$split","Main","flags","$author$project$Main$showButtons","timerString","$author$project$Main$timer","$author$project$Main$resetButton","url","showappropriateGif","test","winning","encouragingWords","fastestTime","$author$project$Main$encouragement","fastestTimeComment","$author$project$Main$recordTime","$author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","storedState","localStorage","startingLowScore","app","URL","process","location","publicUrl","origin","concat","fetch","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bced66d2.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File !== 'undefined' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[36m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ad.M === region.an.M)\n\t{\n\t\treturn 'on line ' + region.ad.M;\n\t}\n\treturn 'on lines ' + region.ad.M + ' through ' + region.an.M;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn !isNaN(word)\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bh,\n\t\timpl.bI,\n\t\timpl.bD,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tvar initPair = init(result.a);\n\tvar model = initPair.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tvar pair = A2(update, msg, model);\n\t\tstepper(model = pair.a, viewMetadata);\n\t\t_Platform_enqueueEffects(managers, pair.b, subscriptions(model));\n\t}\n\n\t_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n//\n// Effects must be queued!\n//\n// Say your init contains a synchronous command, like Time.now or Time.here\n//\n//   - This will produce a batch of effects (FX_1)\n//   - The synchronous task triggers the subsequent `update` call\n//   - This will produce a batch of effects (FX_2)\n//\n// If we just start dispatching FX_2, subscriptions from FX_2 can be processed\n// before subscriptions from FX_1. No good! Earlier versions of this code had\n// this problem, leading to these reports:\n//\n//   https://github.com/elm/core/issues/980\n//   https://github.com/elm/core/pull/981\n//   https://github.com/elm/compiler/issues/1776\n//\n// The queue is necessary to avoid ordering issues for synchronous commands.\n\n\n// Why use true/false here? Why not just check the length of the queue?\n// The goal is to detect \"are we currently dispatching effects?\" If we\n// are, we need to bail and let the ongoing while loop handle things.\n//\n// Now say the queue has 1 element. When we dequeue the final element,\n// the queue will be empty, but we are still actively dispatching effects.\n// So you could get queue jumping in a really tricky category of cases.\n//\nvar _Platform_effectsQueue = [];\nvar _Platform_effectsActive = false;\n\n\nfunction _Platform_enqueueEffects(managers, cmdBag, subBag)\n{\n\t_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });\n\n\tif (_Platform_effectsActive) return;\n\n\t_Platform_effectsActive = true;\n\tfor (var fx; fx = _Platform_effectsQueue.shift(); )\n\t{\n\t\t_Platform_dispatchEffects(fx.p, fx.q, fx.r);\n\t}\n\t_Platform_effectsActive = false;\n}\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\ts: bag.n,\n\t\t\t\tt: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.t)\n\t\t{\n\t\t\tx = temp.s(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tA: func(record.A),\n\t\tae: record.ae,\n\t\tab: record.ab\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.A;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ae;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.ab) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bh,\n\t\timpl.bI,\n\t\timpl.bD,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.bK;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bh,\n\t\timpl.bI,\n\t\timpl.bD,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.ac && impl.ac(sendToApp)\n\t\t\tvar view = impl.bK;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.a2);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.bH) && (_VirtualDom_doc.title = title = doc.bH);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.bt;\n\tvar onUrlRequest = impl.bu;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tac: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aG === next.aG\n\t\t\t\t\t\t\t&& curr.au === next.au\n\t\t\t\t\t\t\t&& curr.aD.a === next.aD.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tbh: function(flags)\n\t\t{\n\t\t\treturn A3(impl.bh, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tbK: impl.bK,\n\t\tbI: impl.bI,\n\t\tbD: impl.bD\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { bf: 'hidden', a4: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { bf: 'mozHidden', a4: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { bf: 'msHidden', a4: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { bf: 'webkitHidden', a4: 'webkitvisibilitychange' }\n\t\t: { bf: 'hidden', a4: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taO: _Browser_getScene(),\n\t\taW: {\n\t\t\taY: _Browser_window.pageXOffset,\n\t\t\taZ: _Browser_window.pageYOffset,\n\t\t\taX: _Browser_doc.documentElement.clientWidth,\n\t\t\tat: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\taX: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tat: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taO: {\n\t\t\t\taX: node.scrollWidth,\n\t\t\t\tat: node.scrollHeight\n\t\t\t},\n\t\t\taW: {\n\t\t\t\taY: node.scrollLeft,\n\t\t\t\taZ: node.scrollTop,\n\t\t\t\taX: node.clientWidth,\n\t\t\t\tat: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taO: _Browser_getScene(),\n\t\t\taW: {\n\t\t\t\taY: x,\n\t\t\t\taZ: y,\n\t\t\t\taX: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tat: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\ta8: {\n\t\t\t\taY: x + rect.left,\n\t\t\t\taZ: y + rect.top,\n\t\t\t\taX: rect.width,\n\t\t\t\tat: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = $elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n// SEND REQUEST\n\nvar _Http_toTask = F3(function(router, toTask, request)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tfunction done(response) {\n\t\t\tcallback(toTask(request.ba.a(response)));\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.addEventListener('error', function() { done($elm$http$Http$NetworkError_); });\n\t\txhr.addEventListener('timeout', function() { done($elm$http$Http$Timeout_); });\n\t\txhr.addEventListener('load', function() { done(_Http_toResponse(request.ba.b, xhr)); });\n\t\t$elm$core$Maybe$isJust(request.aV) && _Http_track(router, xhr, request.aV.a);\n\n\t\ttry {\n\t\t\txhr.open(request.bi, request.bJ, true);\n\t\t} catch (e) {\n\t\t\treturn done($elm$http$Http$BadUrl_(request.bJ));\n\t\t}\n\n\t\t_Http_configureRequest(xhr, request);\n\n\t\trequest.a2.a && xhr.setRequestHeader('Content-Type', request.a2.a);\n\t\txhr.send(request.a2.b);\n\n\t\treturn function() { xhr.c = true; xhr.abort(); };\n\t});\n});\n\n\n// CONFIGURE\n\nfunction _Http_configureRequest(xhr, request)\n{\n\tfor (var headers = request.as; headers.b; headers = headers.b) // WHILE_CONS\n\t{\n\t\txhr.setRequestHeader(headers.a.a, headers.a.b);\n\t}\n\txhr.timeout = request.bG.a || 0;\n\txhr.responseType = request.ba.d;\n\txhr.withCredentials = request.a0;\n}\n\n\n// RESPONSES\n\nfunction _Http_toResponse(toBody, xhr)\n{\n\treturn A2(\n\t\t200 <= xhr.status && xhr.status < 300 ? $elm$http$Http$GoodStatus_ : $elm$http$Http$BadStatus_,\n\t\t_Http_toMetadata(xhr),\n\t\ttoBody(xhr.response)\n\t);\n}\n\n\n// METADATA\n\nfunction _Http_toMetadata(xhr)\n{\n\treturn {\n\t\tbJ: xhr.responseURL,\n\t\tbB: xhr.status,\n\t\tbC: xhr.statusText,\n\t\tas: _Http_parseHeaders(xhr.getAllResponseHeaders())\n\t};\n}\n\n\n// HEADERS\n\nfunction _Http_parseHeaders(rawHeaders)\n{\n\tif (!rawHeaders)\n\t{\n\t\treturn $elm$core$Dict$empty;\n\t}\n\n\tvar headers = $elm$core$Dict$empty;\n\tvar headerPairs = rawHeaders.split('\\r\\n');\n\tfor (var i = headerPairs.length; i--; )\n\t{\n\t\tvar headerPair = headerPairs[i];\n\t\tvar index = headerPair.indexOf(': ');\n\t\tif (index > 0)\n\t\t{\n\t\t\tvar key = headerPair.substring(0, index);\n\t\t\tvar value = headerPair.substring(index + 2);\n\n\t\t\theaders = A3($elm$core$Dict$update, key, function(oldValue) {\n\t\t\t\treturn $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)\n\t\t\t\t\t? value + ', ' + oldValue.a\n\t\t\t\t\t: value\n\t\t\t\t);\n\t\t\t}, headers);\n\t\t}\n\t}\n\treturn headers;\n}\n\n\n// EXPECT\n\nvar _Http_expect = F3(function(type, toBody, toValue)\n{\n\treturn {\n\t\t$: 0,\n\t\td: type,\n\t\tb: toBody,\n\t\ta: toValue\n\t};\n});\n\nvar _Http_mapExpect = F2(function(func, expect)\n{\n\treturn {\n\t\t$: 0,\n\t\td: expect.d,\n\t\tb: expect.b,\n\t\ta: function(x) { return func(expect.a(x)); }\n\t};\n});\n\nfunction _Http_toDataView(arrayBuffer)\n{\n\treturn new DataView(arrayBuffer);\n}\n\n\n// BODY and PARTS\n\nvar _Http_emptyBody = { $: 0 };\nvar _Http_pair = F2(function(a, b) { return { $: 0, a: a, b: b }; });\n\nfunction _Http_toFormData(parts)\n{\n\tfor (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS\n\t{\n\t\tvar part = parts.a;\n\t\tformData.append(part.a, part.b);\n\t}\n\treturn formData;\n}\n\nvar _Http_bytesToBlob = F2(function(mime, bytes)\n{\n\treturn new Blob([bytes], { type: mime });\n});\n\n\n// PROGRESS\n\nfunction _Http_track(router, xhr, tracker)\n{\n\t// TODO check out lengthComputable on loadstart event\n\n\txhr.upload.addEventListener('progress', function(event) {\n\t\tif (xhr.c) { return; }\n\t\t_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Sending({\n\t\t\tbA: event.loaded,\n\t\t\taP: event.total\n\t\t}))));\n\t});\n\txhr.addEventListener('progress', function(event) {\n\t\tif (xhr.c) { return; }\n\t\t_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Receiving({\n\t\t\tbx: event.loaded,\n\t\t\taP: event.lengthComputable ? $elm$core$Maybe$Just(event.total) : $elm$core$Maybe$Nothing\n\t\t}))));\n\t});\n}var $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.b) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.d),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.d);\n\t\t} else {\n\t\t\tvar treeLen = builder.b * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.e) : builder.e;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.b);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.d) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.d);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{e: nodeList, b: (len / $elm$core$Array$branchFactor) | 0, d: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {ap: fragment, au: host, aB: path, aD: port_, aG: protocol, aH: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$element = _Browser_element;\nvar $elm$json$Json$Decode$float = _Json_decodeFloat;\nvar $author$project$Main$RandomizeNumbers = function (a) {\n\treturn {$: 4, a: a};\n};\nvar $author$project$Main$endingNumber = 10;\nvar $elm$random$Random$Generate = $elm$core$Basics$identity;\nvar $elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $elm$random$Random$next = function (_v0) {\n\tvar state0 = _v0.a;\n\tvar incr = _v0.b;\n\treturn A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar $elm$random$Random$initialSeed = function (x) {\n\tvar _v0 = $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _v0.a;\n\tvar incr = _v0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, state2, incr));\n};\nvar $elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$time$Time$customZone = $elm$time$Time$Zone;\nvar $elm$time$Time$Posix = $elm$core$Basics$identity;\nvar $elm$time$Time$millisToPosix = $elm$core$Basics$identity;\nvar $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);\nvar $elm$time$Time$posixToMillis = function (_v0) {\n\tvar millis = _v0;\n\treturn millis;\n};\nvar $elm$random$Random$init = A2(\n\t$elm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn $elm$core$Task$succeed(\n\t\t\t$elm$random$Random$initialSeed(\n\t\t\t\t$elm$time$Time$posixToMillis(time)));\n\t},\n\t$elm$time$Time$now);\nvar $elm$random$Random$step = F2(\n\tfunction (_v0, seed) {\n\t\tvar generator = _v0;\n\t\treturn generator(seed);\n\t});\nvar $elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn $elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _v1 = A2($elm$random$Random$step, generator, seed);\n\t\t\tvar value = _v1.a;\n\t\t\tvar newSeed = _v1.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar $elm$random$Random$onSelfMsg = F3(\n\tfunction (_v0, _v1, seed) {\n\t\treturn $elm$core$Task$succeed(seed);\n\t});\nvar $elm$random$Random$Generator = $elm$core$Basics$identity;\nvar $elm$random$Random$map = F2(\n\tfunction (func, _v0) {\n\t\tvar genA = _v0;\n\t\treturn function (seed0) {\n\t\t\tvar _v1 = genA(seed0);\n\t\t\tvar a = _v1.a;\n\t\t\tvar seed1 = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar $elm$random$Random$cmdMap = F2(\n\tfunction (func, _v0) {\n\t\tvar generator = _v0;\n\t\treturn A2($elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager($elm$random$Random$init, $elm$random$Random$onEffects, $elm$random$Random$onSelfMsg, $elm$random$Random$cmdMap);\nvar $elm$random$Random$command = _Platform_leaf('Random');\nvar $elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn $elm$random$Random$command(\n\t\t\tA2($elm$random$Random$map, tagger, generator));\n\t});\nvar $author$project$Main$Failure = {$: 0};\nvar $author$project$Main$NotStarted = 0;\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $author$project$Main$initialModel = {g: 0, u: -1, s: $elm$core$Maybe$Nothing, h: 0, L: $author$project$Main$Failure, U: _List_Nil, k: 0};\nvar $elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _v0.a;\n\t\t\tvar remainingItems = _v0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\t$elm$core$Elm$JsArray$length(jsArray),\n\t\t\t\t$elm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{e: nodeList, b: nodeListSize, d: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$elm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn $elm$core$Array$empty;\n\t} else {\n\t\treturn A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$core$Bitwise$xor = _Bitwise_xor;\nvar $elm$random$Random$peel = function (_v0) {\n\tvar state = _v0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar $elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _v0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _v0.a;\n\t\t\tvar hi = _v0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & $elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\t$elm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = $elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = $elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar $elm$core$Array$length = function (_v0) {\n\tvar len = _v0.a;\n\treturn len;\n};\nvar $elm$random$Random$listHelp = F4(\n\tfunction (revList, n, gen, seed) {\n\t\tlistHelp:\n\t\twhile (true) {\n\t\t\tif (n < 1) {\n\t\t\t\treturn _Utils_Tuple2(revList, seed);\n\t\t\t} else {\n\t\t\t\tvar _v0 = gen(seed);\n\t\t\t\tvar value = _v0.a;\n\t\t\t\tvar newSeed = _v0.b;\n\t\t\t\tvar $temp$revList = A2($elm$core$List$cons, value, revList),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$gen = gen,\n\t\t\t\t\t$temp$seed = newSeed;\n\t\t\t\trevList = $temp$revList;\n\t\t\t\tn = $temp$n;\n\t\t\t\tgen = $temp$gen;\n\t\t\t\tseed = $temp$seed;\n\t\t\t\tcontinue listHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$random$Random$list = F2(\n\tfunction (n, _v0) {\n\t\tvar gen = _v0;\n\t\treturn function (seed) {\n\t\t\treturn A4($elm$random$Random$listHelp, _List_Nil, n, gen, seed);\n\t\t};\n\t});\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $owanturist$elm_union_find$UnionFind$findFast = F2(\n\tfunction (id, dict) {\n\t\tfindFast:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Dict$get, id, dict);\n\t\t\tif (_v0.$ === 1) {\n\t\t\t\treturn id;\n\t\t\t} else {\n\t\t\t\tvar cursor = _v0.a;\n\t\t\t\tif (_Utils_eq(id, cursor)) {\n\t\t\t\t\treturn id;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$id = cursor,\n\t\t\t\t\t\t$temp$dict = dict;\n\t\t\t\t\tid = $temp$id;\n\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\tcontinue findFast;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $owanturist$elm_union_find$UnionFind$find = F2(\n\tfunction (id, _v0) {\n\t\tvar dict = _v0.b;\n\t\treturn A2($owanturist$elm_union_find$UnionFind$findFast, id, dict);\n\t});\nvar $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar $elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_v0.$) {\n\t\t\t\tvar subTree = _v0.a;\n\t\t\t\tvar $temp$shift = shift - $elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar $elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar $elm$core$Array$get = F2(\n\tfunction (index, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(\n\t\t\tA2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar $elm$core$Array$isEmpty = function (_v0) {\n\tvar len = _v0.a;\n\treturn !len;\n};\nvar $elm$core$Basics$modBy = _Basics_modBy;\nvar $owanturist$elm_union_find$UnionFind$QuickUnionPathCompression = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $owanturist$elm_union_find$UnionFind$quickUnionPathCompression = A2($owanturist$elm_union_find$UnionFind$QuickUnionPathCompression, 0, $elm$core$Dict$empty);\nvar $elm$core$Tuple$second = function (_v0) {\n\tvar y = _v0.b;\n\treturn y;\n};\nvar $elm$core$Dict$Black = 1;\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$Red = 0;\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $owanturist$elm_union_find$UnionFind$findCompressed = F2(\n\tfunction (id, dict) {\n\t\tvar _v0 = A2($elm$core$Dict$get, id, dict);\n\t\tif (_v0.$ === 1) {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tid,\n\t\t\t\tA3($elm$core$Dict$insert, id, id, dict));\n\t\t} else {\n\t\t\tvar cursor = _v0.a;\n\t\t\tif (_Utils_eq(id, cursor)) {\n\t\t\t\treturn _Utils_Tuple2(id, dict);\n\t\t\t} else {\n\t\t\t\tvar _v1 = A2($owanturist$elm_union_find$UnionFind$findCompressed, cursor, dict);\n\t\t\t\tvar parent = _v1.a;\n\t\t\t\tvar nextDict = _v1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tparent,\n\t\t\t\t\tA3($elm$core$Dict$insert, id, parent, nextDict));\n\t\t\t}\n\t\t}\n\t});\nvar $owanturist$elm_union_find$UnionFind$union = F3(\n\tfunction (left, right, _v0) {\n\t\tvar count_ = _v0.a;\n\t\tvar dict = _v0.b;\n\t\tvar _v1 = A2($owanturist$elm_union_find$UnionFind$findCompressed, left, dict);\n\t\tvar leftRoot = _v1.a;\n\t\tvar leftDict = _v1.b;\n\t\tvar _v2 = A2($owanturist$elm_union_find$UnionFind$findCompressed, right, leftDict);\n\t\tvar rightRoot = _v2.a;\n\t\tvar rightDict = _v2.b;\n\t\treturn _Utils_eq(leftRoot, rightRoot) ? A2($owanturist$elm_union_find$UnionFind$QuickUnionPathCompression, count_, rightDict) : A2(\n\t\t\t$owanturist$elm_union_find$UnionFind$QuickUnionPathCompression,\n\t\t\tcount_ + 1,\n\t\t\tA3($elm$core$Dict$insert, leftRoot, rightRoot, rightDict));\n\t});\nvar $elm_community$random_extra$Utils$selectUniqByIndexes = F2(\n\tfunction (values, randomIndexes) {\n\t\tvar modByLength = $elm$core$Basics$modBy(\n\t\t\t$elm$core$Array$length(values));\n\t\tvar step = F2(\n\t\t\tfunction (randomIndex, _v1) {\n\t\t\t\tvar uf = _v1.a;\n\t\t\t\tvar acc = _v1.b;\n\t\t\t\tvar leaderOfElement = A2($owanturist$elm_union_find$UnionFind$find, randomIndex, uf);\n\t\t\t\tvar leaderOfNextElement = A2(\n\t\t\t\t\t$owanturist$elm_union_find$UnionFind$find,\n\t\t\t\t\tmodByLength(leaderOfElement + 1),\n\t\t\t\t\tuf);\n\t\t\t\tvar _v0 = A2($elm$core$Array$get, leaderOfElement, values);\n\t\t\t\tif (_v0.$ === 1) {\n\t\t\t\t\treturn _Utils_Tuple2(uf, acc);\n\t\t\t\t} else {\n\t\t\t\t\tvar value = _v0.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA3($owanturist$elm_union_find$UnionFind$union, leaderOfElement, leaderOfNextElement, uf),\n\t\t\t\t\t\tA2($elm$core$List$cons, value, acc));\n\t\t\t\t}\n\t\t\t});\n\t\treturn $elm$core$Array$isEmpty(values) ? _List_Nil : A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tstep,\n\t\t\t_Utils_Tuple2($owanturist$elm_union_find$UnionFind$quickUnionPathCompression, _List_Nil),\n\t\t\trandomIndexes).b;\n\t});\nvar $elm_community$random_extra$Random$List$shuffle = function (list) {\n\tvar values = $elm$core$Array$fromList(list);\n\tvar length = $elm$core$Array$length(values);\n\treturn A2(\n\t\t$elm$random$Random$map,\n\t\t$elm_community$random_extra$Utils$selectUniqByIndexes(values),\n\t\tA2(\n\t\t\t$elm$random$Random$list,\n\t\t\tlength,\n\t\t\tA2($elm$random$Random$int, 0, length - 1)));\n};\nvar $author$project$Main$startingNumber = 1;\nvar $author$project$Main$init = function (flags) {\n\tif (flags.$ === 1) {\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\t$author$project$Main$initialModel,\n\t\t\t\t{s: $elm$core$Maybe$Nothing}),\n\t\t\tA2(\n\t\t\t\t$elm$random$Random$generate,\n\t\t\t\t$author$project$Main$RandomizeNumbers,\n\t\t\t\t$elm_community$random_extra$Random$List$shuffle(\n\t\t\t\t\tA2($elm$core$List$range, $author$project$Main$startingNumber, $author$project$Main$endingNumber))));\n\t} else {\n\t\tvar fastestTime = flags.a;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\t$author$project$Main$initialModel,\n\t\t\t\t{\n\t\t\t\t\ts: $elm$core$Maybe$Just(fastestTime)\n\t\t\t\t}),\n\t\t\tA2(\n\t\t\t\t$elm$random$Random$generate,\n\t\t\t\t$author$project$Main$RandomizeNumbers,\n\t\t\t\t$elm_community$random_extra$Random$List$shuffle(\n\t\t\t\t\tA2($elm$core$List$range, $author$project$Main$startingNumber, $author$project$Main$endingNumber))));\n\t}\n};\nvar $elm$json$Json$Decode$null = _Json_decodeNull;\nvar $elm$json$Json$Decode$oneOf = _Json_oneOf;\nvar $author$project$Main$Running = 1;\nvar $author$project$Main$Tick = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {aF: processes, aU: taggers};\n\t});\nvar $elm$time$Time$init = $elm$core$Task$succeed(\n\tA2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));\nvar $elm$time$Time$addMySub = F2(\n\tfunction (_v0, state) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\tvar _v1 = A2($elm$core$Dict$get, interval, state);\n\t\tif (_v1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _v1.a;\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2($elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar $elm$core$Process$kill = _Scheduler_kill;\nvar $elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _v0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _v0.a;\n\t\t\t\t\tvar result = _v0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v2 = list.a;\n\t\t\t\t\t\tvar lKey = _v2.a;\n\t\t\t\t\t\tvar lValue = _v2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_v0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _v3 = A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _v3.a;\n\t\tvar intermediateResult = _v3.b;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v4, result) {\n\t\t\t\t\tvar k = _v4.a;\n\t\t\t\t\tvar v = _v4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar $elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar $elm$time$Time$setInterval = _Time_setInterval;\nvar $elm$core$Process$spawn = _Scheduler_spawn;\nvar $elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn $elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = $elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2($elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2($elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar $elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _v0) {\n\t\tvar processes = _v0.aF;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_v6, id, _v7) {\n\t\t\t\tvar spawns = _v7.a;\n\t\t\t\tvar existing = _v7.b;\n\t\t\t\tvar kills = _v7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_v5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _v4) {\n\t\t\t\tvar spawns = _v4.a;\n\t\t\t\tvar existing = _v4.b;\n\t\t\t\tvar kills = _v4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _v3) {\n\t\t\t\tvar spawns = _v3.a;\n\t\t\t\tvar existing = _v3.b;\n\t\t\t\tvar kills = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _v1 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\t$elm$core$Dict$empty,\n\t\t\t\t$elm$core$Task$succeed(0)));\n\t\tvar spawnList = _v1.a;\n\t\tvar existingDict = _v1.b;\n\t\tvar killTask = _v1.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2($elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar $elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _v0 = A2($elm$core$Dict$get, interval, state.aU);\n\t\tif (_v0.$ === 1) {\n\t\t\treturn $elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _v0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn $elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));\n\t\t}\n\t});\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$time$Time$subMap = F2(\n\tfunction (f, _v0) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2($elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);\nvar $elm$time$Time$subscription = _Platform_leaf('Time');\nvar $elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn $elm$time$Time$subscription(\n\t\t\tA2($elm$time$Time$Every, interval, tagger));\n\t});\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);\nvar $author$project$Main$subscriptions = function (model) {\n\treturn (model.h === 1) ? A2($elm$time$Time$every, 100, $author$project$Main$Tick) : $elm$core$Platform$Sub$none;\n};\nvar $author$project$Main$End = 2;\nvar $author$project$Main$Success = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$json$Json$Encode$float = _Json_wrap;\nvar $author$project$Main$cacheScore = _Platform_outgoingPort('cacheScore', $elm$json$Json$Encode$float);\nvar $author$project$Main$GotGif = function (a) {\n\treturn {$: 5, a: a};\n};\nvar $elm$json$Json$Decode$decodeString = _Json_runOnString;\nvar $elm$http$Http$BadStatus_ = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$http$Http$BadUrl_ = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$http$Http$GoodStatus_ = F2(\n\tfunction (a, b) {\n\t\treturn {$: 4, a: a, b: b};\n\t});\nvar $elm$http$Http$NetworkError_ = {$: 2};\nvar $elm$http$Http$Receiving = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$http$Http$Sending = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$http$Http$Timeout_ = {$: 1};\nvar $elm$core$Maybe$isJust = function (maybe) {\n\tif (!maybe.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$core$Dict$getMin = function (dict) {\n\tgetMin:\n\twhile (true) {\n\t\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\t\tvar left = dict.d;\n\t\t\tvar $temp$dict = left;\n\t\t\tdict = $temp$dict;\n\t\t\tcontinue getMin;\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n};\nvar $elm$core$Dict$moveRedLeft = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.e.d.$ === -1) && (!dict.e.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v1 = dict.d;\n\t\t\tvar lClr = _v1.a;\n\t\t\tvar lK = _v1.b;\n\t\t\tvar lV = _v1.c;\n\t\t\tvar lLeft = _v1.d;\n\t\t\tvar lRight = _v1.e;\n\t\t\tvar _v2 = dict.e;\n\t\t\tvar rClr = _v2.a;\n\t\t\tvar rK = _v2.b;\n\t\t\tvar rV = _v2.c;\n\t\t\tvar rLeft = _v2.d;\n\t\t\tvar _v3 = rLeft.a;\n\t\t\tvar rlK = rLeft.b;\n\t\t\tvar rlV = rLeft.c;\n\t\t\tvar rlL = rLeft.d;\n\t\t\tvar rlR = rLeft.e;\n\t\t\tvar rRight = _v2.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\trlK,\n\t\t\t\trlV,\n\t\t\t\tA5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\trlL),\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v4 = dict.d;\n\t\t\tvar lClr = _v4.a;\n\t\t\tvar lK = _v4.b;\n\t\t\tvar lV = _v4.c;\n\t\t\tvar lLeft = _v4.d;\n\t\t\tvar lRight = _v4.e;\n\t\t\tvar _v5 = dict.e;\n\t\t\tvar rClr = _v5.a;\n\t\t\tvar rK = _v5.b;\n\t\t\tvar rV = _v5.c;\n\t\t\tvar rLeft = _v5.d;\n\t\t\tvar rRight = _v5.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar $elm$core$Dict$moveRedRight = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.d.d.$ === -1) && (!dict.d.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v1 = dict.d;\n\t\t\tvar lClr = _v1.a;\n\t\t\tvar lK = _v1.b;\n\t\t\tvar lV = _v1.c;\n\t\t\tvar _v2 = _v1.d;\n\t\t\tvar _v3 = _v2.a;\n\t\t\tvar llK = _v2.b;\n\t\t\tvar llV = _v2.c;\n\t\t\tvar llLeft = _v2.d;\n\t\t\tvar llRight = _v2.e;\n\t\t\tvar lRight = _v1.e;\n\t\t\tvar _v4 = dict.e;\n\t\t\tvar rClr = _v4.a;\n\t\t\tvar rK = _v4.b;\n\t\t\tvar rV = _v4.c;\n\t\t\tvar rLeft = _v4.d;\n\t\t\tvar rRight = _v4.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\tA5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tlRight,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v5 = dict.d;\n\t\t\tvar lClr = _v5.a;\n\t\t\tvar lK = _v5.b;\n\t\t\tvar lV = _v5.c;\n\t\t\tvar lLeft = _v5.d;\n\t\t\tvar lRight = _v5.e;\n\t\t\tvar _v6 = dict.e;\n\t\t\tvar rClr = _v6.a;\n\t\t\tvar rK = _v6.b;\n\t\t\tvar rV = _v6.c;\n\t\t\tvar rLeft = _v6.d;\n\t\t\tvar rRight = _v6.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar $elm$core$Dict$removeHelpPrepEQGT = F7(\n\tfunction (targetKey, dict, color, key, value, left, right) {\n\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\tvar _v1 = left.a;\n\t\t\tvar lK = left.b;\n\t\t\tvar lV = left.c;\n\t\t\tvar lLeft = left.d;\n\t\t\tvar lRight = left.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tlLeft,\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));\n\t\t} else {\n\t\t\t_v2$2:\n\t\t\twhile (true) {\n\t\t\t\tif ((right.$ === -1) && (right.a === 1)) {\n\t\t\t\t\tif (right.d.$ === -1) {\n\t\t\t\t\t\tif (right.d.a === 1) {\n\t\t\t\t\t\t\tvar _v3 = right.a;\n\t\t\t\t\t\t\tvar _v4 = right.d;\n\t\t\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\t\t\treturn $elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _v2$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v6 = right.a;\n\t\t\t\t\t\tvar _v7 = right.d;\n\t\t\t\t\t\treturn $elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t});\nvar $elm$core$Dict$removeMin = function (dict) {\n\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\tvar color = dict.a;\n\t\tvar key = dict.b;\n\t\tvar value = dict.c;\n\t\tvar left = dict.d;\n\t\tvar lColor = left.a;\n\t\tvar lLeft = left.d;\n\t\tvar right = dict.e;\n\t\tif (lColor === 1) {\n\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\tvar _v3 = lLeft.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\t$elm$core$Dict$removeMin(left),\n\t\t\t\t\tright);\n\t\t\t} else {\n\t\t\t\tvar _v4 = $elm$core$Dict$moveRedLeft(dict);\n\t\t\t\tif (_v4.$ === -1) {\n\t\t\t\t\tvar nColor = _v4.a;\n\t\t\t\t\tvar nKey = _v4.b;\n\t\t\t\t\tvar nValue = _v4.c;\n\t\t\t\t\tvar nLeft = _v4.d;\n\t\t\t\t\tvar nRight = _v4.e;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t$elm$core$Dict$removeMin(nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\t$elm$core$Dict$removeMin(left),\n\t\t\t\tright);\n\t\t}\n\t} else {\n\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t}\n};\nvar $elm$core$Dict$removeHelp = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_cmp(targetKey, key) < 0) {\n\t\t\t\tif ((left.$ === -1) && (left.a === 1)) {\n\t\t\t\t\tvar _v4 = left.a;\n\t\t\t\t\tvar lLeft = left.d;\n\t\t\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\t\t\tvar _v6 = lLeft.a;\n\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\t\tright);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v7 = $elm$core$Dict$moveRedLeft(dict);\n\t\t\t\t\t\tif (_v7.$ === -1) {\n\t\t\t\t\t\t\tvar nColor = _v7.a;\n\t\t\t\t\t\t\tvar nKey = _v7.b;\n\t\t\t\t\t\t\tvar nValue = _v7.c;\n\t\t\t\t\t\t\tvar nLeft = _v7.d;\n\t\t\t\t\t\t\tvar nRight = _v7.e;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\t\t\tnColor,\n\t\t\t\t\t\t\t\tnKey,\n\t\t\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, nLeft),\n\t\t\t\t\t\t\t\tnRight);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\tright);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Dict$removeHelpEQGT,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\tA7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$removeHelpEQGT = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -1) {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_eq(targetKey, key)) {\n\t\t\t\tvar _v1 = $elm$core$Dict$getMin(right);\n\t\t\t\tif (_v1.$ === -1) {\n\t\t\t\t\tvar minKey = _v1.b;\n\t\t\t\t\tvar minValue = _v1.c;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tminKey,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\t$elm$core$Dict$removeMin(right));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tleft,\n\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t}\n\t});\nvar $elm$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\tvar _v0 = A2($elm$core$Dict$removeHelp, key, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Dict$update = F3(\n\tfunction (targetKey, alter, dictionary) {\n\t\tvar _v0 = alter(\n\t\t\tA2($elm$core$Dict$get, targetKey, dictionary));\n\t\tif (!_v0.$) {\n\t\t\tvar value = _v0.a;\n\t\t\treturn A3($elm$core$Dict$insert, targetKey, value, dictionary);\n\t\t} else {\n\t\t\treturn A2($elm$core$Dict$remove, targetKey, dictionary);\n\t\t}\n\t});\nvar $elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$http$Http$expectStringResponse = F2(\n\tfunction (toMsg, toResult) {\n\t\treturn A3(\n\t\t\t_Http_expect,\n\t\t\t'',\n\t\t\t$elm$core$Basics$identity,\n\t\t\tA2($elm$core$Basics$composeR, toResult, toMsg));\n\t});\nvar $elm$core$Result$mapError = F2(\n\tfunction (f, result) {\n\t\tif (!result.$) {\n\t\t\tvar v = result.a;\n\t\t\treturn $elm$core$Result$Ok(v);\n\t\t} else {\n\t\t\tvar e = result.a;\n\t\t\treturn $elm$core$Result$Err(\n\t\t\t\tf(e));\n\t\t}\n\t});\nvar $elm$http$Http$BadBody = function (a) {\n\treturn {$: 4, a: a};\n};\nvar $elm$http$Http$BadStatus = function (a) {\n\treturn {$: 3, a: a};\n};\nvar $elm$http$Http$BadUrl = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$http$Http$NetworkError = {$: 2};\nvar $elm$http$Http$Timeout = {$: 1};\nvar $elm$http$Http$resolve = F2(\n\tfunction (toResult, response) {\n\t\tswitch (response.$) {\n\t\t\tcase 0:\n\t\t\t\tvar url = response.a;\n\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t$elm$http$Http$BadUrl(url));\n\t\t\tcase 1:\n\t\t\t\treturn $elm$core$Result$Err($elm$http$Http$Timeout);\n\t\t\tcase 2:\n\t\t\t\treturn $elm$core$Result$Err($elm$http$Http$NetworkError);\n\t\t\tcase 3:\n\t\t\t\tvar metadata = response.a;\n\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t$elm$http$Http$BadStatus(metadata.bB));\n\t\t\tdefault:\n\t\t\t\tvar body = response.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Result$mapError,\n\t\t\t\t\t$elm$http$Http$BadBody,\n\t\t\t\t\ttoResult(body));\n\t\t}\n\t});\nvar $elm$http$Http$expectJson = F2(\n\tfunction (toMsg, decoder) {\n\t\treturn A2(\n\t\t\t$elm$http$Http$expectStringResponse,\n\t\t\ttoMsg,\n\t\t\t$elm$http$Http$resolve(\n\t\t\t\tfunction (string) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Result$mapError,\n\t\t\t\t\t\t$elm$json$Json$Decode$errorToString,\n\t\t\t\t\t\tA2($elm$json$Json$Decode$decodeString, decoder, string));\n\t\t\t\t}));\n\t});\nvar $elm$http$Http$emptyBody = _Http_emptyBody;\nvar $elm$http$Http$Request = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$http$Http$State = F2(\n\tfunction (reqs, subs) {\n\t\treturn {aJ: reqs, aT: subs};\n\t});\nvar $elm$http$Http$init = $elm$core$Task$succeed(\n\tA2($elm$http$Http$State, $elm$core$Dict$empty, _List_Nil));\nvar $elm$http$Http$updateReqs = F3(\n\tfunction (router, cmds, reqs) {\n\t\tupdateReqs:\n\t\twhile (true) {\n\t\t\tif (!cmds.b) {\n\t\t\t\treturn $elm$core$Task$succeed(reqs);\n\t\t\t} else {\n\t\t\t\tvar cmd = cmds.a;\n\t\t\t\tvar otherCmds = cmds.b;\n\t\t\t\tif (!cmd.$) {\n\t\t\t\t\tvar tracker = cmd.a;\n\t\t\t\t\tvar _v2 = A2($elm$core$Dict$get, tracker, reqs);\n\t\t\t\t\tif (_v2.$ === 1) {\n\t\t\t\t\t\tvar $temp$router = router,\n\t\t\t\t\t\t\t$temp$cmds = otherCmds,\n\t\t\t\t\t\t\t$temp$reqs = reqs;\n\t\t\t\t\t\trouter = $temp$router;\n\t\t\t\t\t\tcmds = $temp$cmds;\n\t\t\t\t\t\treqs = $temp$reqs;\n\t\t\t\t\t\tcontinue updateReqs;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar pid = _v2.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (_v3) {\n\t\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t\t$elm$http$Http$updateReqs,\n\t\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\t\totherCmds,\n\t\t\t\t\t\t\t\t\tA2($elm$core$Dict$remove, tracker, reqs));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$elm$core$Process$kill(pid));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar req = cmd.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\t\tvar _v4 = req.aV;\n\t\t\t\t\t\t\tif (_v4.$ === 1) {\n\t\t\t\t\t\t\t\treturn A3($elm$http$Http$updateReqs, router, otherCmds, reqs);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar tracker = _v4.a;\n\t\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t\t$elm$http$Http$updateReqs,\n\t\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\t\totherCmds,\n\t\t\t\t\t\t\t\t\tA3($elm$core$Dict$insert, tracker, pid, reqs));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$core$Process$spawn(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t_Http_toTask,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\t\t\t\t\treq)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$http$Http$onEffects = F4(\n\tfunction (router, cmds, subs, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (reqs) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2($elm$http$Http$State, reqs, subs));\n\t\t\t},\n\t\t\tA3($elm$http$Http$updateReqs, router, cmds, state.aJ));\n\t});\nvar $elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _v0 = f(mx);\n\t\tif (!_v0.$) {\n\t\t\tvar x = _v0.a;\n\t\t\treturn A2($elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar $elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$http$Http$maybeSend = F4(\n\tfunction (router, desiredTracker, progress, _v0) {\n\t\tvar actualTracker = _v0.a;\n\t\tvar toMsg = _v0.b;\n\t\treturn _Utils_eq(desiredTracker, actualTracker) ? $elm$core$Maybe$Just(\n\t\t\tA2(\n\t\t\t\t$elm$core$Platform$sendToApp,\n\t\t\t\trouter,\n\t\t\t\ttoMsg(progress))) : $elm$core$Maybe$Nothing;\n\t});\nvar $elm$http$Http$onSelfMsg = F3(\n\tfunction (router, _v0, state) {\n\t\tvar tracker = _v0.a;\n\t\tvar progress = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (_v1) {\n\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t\tA3($elm$http$Http$maybeSend, router, tracker, progress),\n\t\t\t\t\tstate.aT)));\n\t});\nvar $elm$http$Http$Cancel = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$http$Http$cmdMap = F2(\n\tfunction (func, cmd) {\n\t\tif (!cmd.$) {\n\t\t\tvar tracker = cmd.a;\n\t\t\treturn $elm$http$Http$Cancel(tracker);\n\t\t} else {\n\t\t\tvar r = cmd.a;\n\t\t\treturn $elm$http$Http$Request(\n\t\t\t\t{\n\t\t\t\t\ta0: r.a0,\n\t\t\t\t\ta2: r.a2,\n\t\t\t\t\tba: A2(_Http_mapExpect, func, r.ba),\n\t\t\t\t\tas: r.as,\n\t\t\t\t\tbi: r.bi,\n\t\t\t\t\tbG: r.bG,\n\t\t\t\t\taV: r.aV,\n\t\t\t\t\tbJ: r.bJ\n\t\t\t\t});\n\t\t}\n\t});\nvar $elm$http$Http$MySub = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$http$Http$subMap = F2(\n\tfunction (func, _v0) {\n\t\tvar tracker = _v0.a;\n\t\tvar toMsg = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$http$Http$MySub,\n\t\t\ttracker,\n\t\t\tA2($elm$core$Basics$composeR, toMsg, func));\n\t});\n_Platform_effectManagers['Http'] = _Platform_createManager($elm$http$Http$init, $elm$http$Http$onEffects, $elm$http$Http$onSelfMsg, $elm$http$Http$cmdMap, $elm$http$Http$subMap);\nvar $elm$http$Http$command = _Platform_leaf('Http');\nvar $elm$http$Http$subscription = _Platform_leaf('Http');\nvar $elm$http$Http$request = function (r) {\n\treturn $elm$http$Http$command(\n\t\t$elm$http$Http$Request(\n\t\t\t{a0: false, a2: r.a2, ba: r.ba, as: r.as, bi: r.bi, bG: r.bG, aV: r.aV, bJ: r.bJ}));\n};\nvar $elm$http$Http$get = function (r) {\n\treturn $elm$http$Http$request(\n\t\t{a2: $elm$http$Http$emptyBody, ba: r.ba, as: _List_Nil, bi: 'GET', bG: $elm$core$Maybe$Nothing, aV: $elm$core$Maybe$Nothing, bJ: r.bJ});\n};\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $author$project$Main$gifDecoder = A2(\n\t$elm$json$Json$Decode$field,\n\t'data',\n\tA2($elm$json$Json$Decode$field, 'image_url', $elm$json$Json$Decode$string));\nvar $author$project$Main$getRandomGif = function (gifType) {\n\treturn $elm$http$Http$get(\n\t\t{\n\t\t\tba: A2($elm$http$Http$expectJson, $author$project$Main$GotGif, $author$project$Main$gifDecoder),\n\t\t\tbJ: 'https://api.giphy.com/v1/gifs/random?rating=g&api_key=sd2CNhUjDfoQqLTH0nlL3Uf2YwHRHoyq&tag=' + gifType\n\t\t});\n};\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar newTime = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{k: model.k + 1.0}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 2:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t$author$project$Main$initialModel,\n\t\t\t\t\t\t{s: model.s}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$random$Random$generate,\n\t\t\t\t\t\t$author$project$Main$RandomizeNumbers,\n\t\t\t\t\t\t$elm_community$random_extra$Random$List$shuffle(\n\t\t\t\t\t\t\tA2($elm$core$List$range, $author$project$Main$startingNumber, $author$project$Main$endingNumber))));\n\t\t\tcase 3:\n\t\t\t\tvar pressedNumber = msg.a;\n\t\t\t\tvar youHaveaNewRecord = function (fastestTime) {\n\t\t\t\t\treturn _Utils_cmp(model.k / 10, fastestTime) < 0;\n\t\t\t\t};\n\t\t\t\tvar theNextCorrectNumber = _Utils_eq(pressedNumber, model.g + 1) ? (model.g + 1) : model.g;\n\t\t\t\tvar theNewGameState = ((!model.h) && _Utils_eq(pressedNumber, $author$project$Main$startingNumber)) ? 1 : ((_Utils_eq(pressedNumber, $author$project$Main$endingNumber) && _Utils_eq(model.g, $author$project$Main$endingNumber - 1)) ? 2 : model.h);\n\t\t\t\tvar _v1 = model.s;\n\t\t\t\tif (!_v1.$) {\n\t\t\t\t\tvar fastestTime = _v1.a;\n\t\t\t\t\treturn (theNewGameState === 2) ? (youHaveaNewRecord(fastestTime) ? _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tg: theNextCorrectNumber,\n\t\t\t\t\t\t\t\tu: pressedNumber,\n\t\t\t\t\t\t\t\ts: $elm$core$Maybe$Just(model.k / 10),\n\t\t\t\t\t\t\t\th: theNewGameState\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$author$project$Main$cacheScore(model.k / 10),\n\t\t\t\t\t\t\t\t\t$author$project$Main$getRandomGif('victory')\n\t\t\t\t\t\t\t\t]))) : (((model.k / 10) < 30) ? _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{g: theNextCorrectNumber, u: pressedNumber, h: theNewGameState}),\n\t\t\t\t\t\t$author$project$Main$getRandomGif('winner')) : _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{g: theNextCorrectNumber, u: pressedNumber, h: theNewGameState}),\n\t\t\t\t\t\t$author$project$Main$getRandomGif('loser')))) : _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{g: theNextCorrectNumber, u: pressedNumber, h: theNewGameState}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn (theNewGameState === 2) ? _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tg: theNextCorrectNumber,\n\t\t\t\t\t\t\t\tu: pressedNumber,\n\t\t\t\t\t\t\t\ts: $elm$core$Maybe$Just(model.k / 10),\n\t\t\t\t\t\t\t\th: theNewGameState\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$author$project$Main$cacheScore(model.k / 10),\n\t\t\t\t\t\t\t\t\t$author$project$Main$getRandomGif('victory')\n\t\t\t\t\t\t\t\t]))) : _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{g: theNextCorrectNumber, u: pressedNumber, h: theNewGameState}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 4:\n\t\t\t\tvar numbers = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{U: numbers}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\tvar result = msg.a;\n\t\t\t\tif (!result.$) {\n\t\t\t\t\tvar url = result.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tL: $author$project$Main$Success(url)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{L: $author$project$Main$Failure}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t}\n\t});\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $elm$html$Html$br = _VirtualDom_node('br');\nvar $elm$html$Html$img = _VirtualDom_node('img');\nvar $elm$html$Html$Attributes$src = function (url) {\n\treturn A2(\n\t\t$elm$html$Html$Attributes$stringProperty,\n\t\t'src',\n\t\t_VirtualDom_noJavaScriptOrHtmlUri(url));\n};\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $author$project$Main$encouragement = function (model) {\n\tvar showappropriateGif = function () {\n\t\tvar _v1 = model.L;\n\t\tif (_v1.$ === 2) {\n\t\t\tvar url = _v1.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$html$Html$img,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$src(url)\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil);\n\t\t} else {\n\t\t\treturn A2($elm$html$Html$div, _List_Nil, _List_Nil);\n\t\t}\n\t}();\n\tvar winning = A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('col-12')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text('Wow! That\\'s a new record! Take a screenshot as proof and see if your friends can beat this?'),\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[showappropriateGif]))\n\t\t\t]));\n\tvar encouragingWords = function () {\n\t\tif (model.h === 2) {\n\t\t\tvar _v0 = model.s;\n\t\t\tif (_v0.$ === 1) {\n\t\t\t\treturn winning;\n\t\t\t} else {\n\t\t\t\tvar fastestTime = _v0.a;\n\t\t\t\treturn (_Utils_eq(model.k / 10, fastestTime) || (_Utils_cmp(model.k / 10, fastestTime) < 0)) ? winning : (((model.k / 10) < 30) ? A2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('col-12')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$text('Nice time! How does it compare with your friends\\' times? Screenshot + send to them?'),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[showappropriateGif]))\n\t\t\t\t\t\t])) : A2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('col-12')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$text('Try again for a faster time?'),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[showappropriateGif]))\n\t\t\t\t\t\t])));\n\t\t\t}\n\t\t} else {\n\t\t\treturn $elm$html$Html$text('');\n\t\t}\n\t}();\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($elm$html$Html$br, _List_Nil, _List_Nil),\n\t\t\t\tencouragingWords,\n\t\t\t\tA2($elm$html$Html$br, _List_Nil, _List_Nil)\n\t\t\t]));\n};\nvar $elm$html$Html$h1 = _VirtualDom_node('h1');\nvar $elm$html$Html$p = _VirtualDom_node('p');\nvar $author$project$Main$instructions = A2(\n\t$elm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$Attributes$class('row')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$html$Html$h1,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('col-12')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('The Number Game:')\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\t$elm$html$Html$p,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('col-12')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t'Click from 1 through to ' + ($elm$core$String$fromInt($author$project$Main$endingNumber) + ' as fast as you can!'))\n\t\t\t\t]))\n\t\t]));\nvar $elm$core$String$fromFloat = _String_fromNumber;\nvar $elm$core$Basics$neq = _Utils_notEqual;\nvar $elm$core$Basics$not = _Basics_not;\nvar $elm$html$Html$small = _VirtualDom_node('small');\nvar $author$project$Main$recordTime = function (model) {\n\tvar timerString = function (time) {\n\t\treturn $elm$core$String$fromFloat(time);\n\t};\n\tvar formattedTimerString = function (time) {\n\t\treturn (!A2(\n\t\t\t$elm$core$String$contains,\n\t\t\t'.',\n\t\t\ttimerString(time))) ? (timerString(time) + '.0') : timerString(time);\n\t};\n\tvar fastestTimeComment = function () {\n\t\tvar _v0 = model.s;\n\t\tif (_v0.$ === 1) {\n\t\t\treturn '';\n\t\t} else {\n\t\t\tvar fastestTime = _v0.a;\n\t\t\treturn '(Record: ' + (formattedTimerString(fastestTime) + ')');\n\t\t}\n\t}();\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text(fastestTimeComment)\n\t\t\t\t\t])),\n\t\t\t\t(model.h !== 2) ? A2(\n\t\t\t\t$elm$html$Html$small,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('form-text text-muted')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text('Can you go lower?')\n\t\t\t\t\t])) : $elm$html$Html$text('')\n\t\t\t]));\n};\nvar $author$project$Main$ResetGame = {$: 2};\nvar $elm$html$Html$button = _VirtualDom_node('button');\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $author$project$Main$resetButton = function (model) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('row')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$br,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('row')\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil),\n\t\t\t\t(!(!model.h)) ? A2(\n\t\t\t\t$elm$html$Html$button,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('col-12 btn btn-primary'),\n\t\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Main$ResetGame)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text('Reset Game')\n\t\t\t\t\t])) : $elm$html$Html$text('')\n\t\t\t]));\n};\nvar $author$project$Main$NumberPress = function (a) {\n\treturn {$: 3, a: a};\n};\nvar $author$project$Main$showButton = F2(\n\tfunction (model, buttonNumber) {\n\t\tvar obfuscateButtonNumber = (!model.h) ? ((buttonNumber !== 1) ? ' x ' : '1') : $elm$core$String$fromInt(buttonNumber);\n\t\tvar highlightCurrentButton = _Utils_eq(buttonNumber, model.g) ? 'btn-block border-dark game-btn btn btn-success' : ((_Utils_eq(buttonNumber, $author$project$Main$startingNumber) && (!model.g)) ? 'btn-block border-dark game-btn btn btn-success' : ((_Utils_cmp(buttonNumber, model.g) < 0) ? 'btn-block border-dark game-btn btn btn-secondary' : (((!_Utils_eq(model.u, model.g)) && _Utils_eq(buttonNumber, model.u)) ? 'btn-block border-dark game-btn btn btn-danger' : 'btn-block border-dark game-btn btn btn-light')));\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('col-2 d-flex justify-content-center align-items-center')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$html$Html$button,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(highlightCurrentButton),\n\t\t\t\t\t\t\t$elm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t$author$project$Main$NumberPress(buttonNumber))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$text(obfuscateButtonNumber)\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$Main$showButtonRow = F2(\n\tfunction (model, list) {\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('row no-gutters')\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (x) {\n\t\t\t\t\treturn A2($author$project$Main$showButton, model, x);\n\t\t\t\t},\n\t\t\t\tlist));\n\t});\nvar $elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2($elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn $elm$core$List$reverse(\n\t\t\tA3($elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar $elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _v0 = _Utils_Tuple2(n, list);\n\t\t\t_v0$1:\n\t\t\twhile (true) {\n\t\t\t\t_v0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_v0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_v0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\t\t\t\t\tvar x = _v2.a;\n\t\t\t\t\t\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\t\t\t\t\t\tvar y = _v3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v4 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v4.a;\n\t\t\t\t\t\t\t\t\t\tvar _v5 = _v4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v5.a;\n\t\t\t\t\t\t\t\t\t\tvar _v6 = _v5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b && _v0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v7 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v7.a;\n\t\t\t\t\t\t\t\t\t\tvar _v8 = _v7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v8.a;\n\t\t\t\t\t\t\t\t\t\tvar _v9 = _v8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v9.a;\n\t\t\t\t\t\t\t\t\t\tvar _v10 = _v9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _v10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _v10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_v0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar x = _v1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar $elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3($elm$core$List$takeFast, 0, n, list);\n\t});\nvar $author$project$Main$split = F2(\n\tfunction (i, list) {\n\t\tvar _v0 = A2($elm$core$List$take, i, list);\n\t\tif (!_v0.b) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar listHead = _v0;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tlistHead,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Main$split,\n\t\t\t\t\ti,\n\t\t\t\t\tA2($elm$core$List$drop, i, list)));\n\t\t}\n\t});\nvar $author$project$Main$showButtons = function (model) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_Nil,\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (x) {\n\t\t\t\treturn A2($author$project$Main$showButtonRow, model, x);\n\t\t\t},\n\t\t\tA2($author$project$Main$split, 5, model.U)));\n};\nvar $author$project$Main$timer = function (model) {\n\tvar timerString = $elm$core$String$fromFloat(model.k / 10);\n\tvar formattedTimerString = (!A2($elm$core$String$contains, '.', timerString)) ? (timerString + '.0') : timerString;\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text('Timer: ' + formattedTimerString)\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$Main$view = function (model) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('container')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$Main$instructions,\n\t\t\t\t$author$project$Main$showButtons(model),\n\t\t\t\t$author$project$Main$timer(model),\n\t\t\t\t$author$project$Main$resetButton(model),\n\t\t\t\t$author$project$Main$encouragement(model),\n\t\t\t\t$author$project$Main$recordTime(model)\n\t\t\t]));\n};\nvar $author$project$Main$main = $elm$browser$Browser$element(\n\t{bh: $author$project$Main$init, bD: $author$project$Main$subscriptions, bI: $author$project$Main$update, bK: $author$project$Main$view});\n_Platform_export({'Main':{'init':$author$project$Main$main(\n\t$elm$json$Json$Decode$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),\n\t\t\t\tA2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, $elm$json$Json$Decode$float)\n\t\t\t])))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nvar storedState = localStorage.getItem('cache');\nconsole.log(\"Retrieved state: \", storedState);\nvar startingLowScore = storedState ? JSON.parse(storedState) : null;\n\n\nvar app = Elm.Main.init({\n  node: document.getElementById('root'),\n  flags: startingLowScore\n});\n\n\n// let's come back to the ports after we first sort out: flags\n\napp.ports.cacheScore.subscribe(function(data) {\n  localStorage.setItem('cache', JSON.stringify(data));\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}